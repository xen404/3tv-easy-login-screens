{"version":3,"sources":["polyfills/Array.from.js","node_modules/micromodal/dist/micromodal.es.js","polyfills/Object.assign.js","components/07-modal/modal.js"],"names":["toStr","isCallable","maxSafeInteger","toLength","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","arr2","assign","value","varArgs","to","index","arguments","nextSource","nextKey","hasOwnProperty","fn","Math","pow","number","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayLike","C","this","items","T","mapFn","kValue","A","k","FOCUSABLE_ELEMENTS","Modal","activeModal","validateModalPresence","validateArgs","MicroModal","_ref","targetModal","_ref$triggers","triggers","_ref$onShow","onShow","_ref$onClose","onClose","_ref$openTrigger","openTrigger","_ref$closeTrigger","closeTrigger","_ref$openClass","openClass","_ref$disableScroll","disableScroll","_ref$disableFocus","disableFocus","_ref$awaitCloseAnimat","awaitCloseAnimation","_ref$awaitOpenAnimati","awaitOpenAnimation","_ref$debugMode","debugMode","instance","Constructor","_classCallCheck","modal","document","getElementById","config","registerTriggers","apply","onClick","bind","onKeydown","protoProps","staticProps","_this","_len","_key","filter","Boolean","forEach","trigger","addEventListener","event","showModal","_this2","undefined","activeElement","setAttribute","classList","add","scrollBehaviour","addEventListeners","handler","removeEventListener","setFocusToFirstNode","removeEventListeners","focus","remove","closeModal","toggle","body","querySelector","style","overflow","hasAttribute","keyCode","retainFocus","nodes","querySelectorAll","_this3","focusableNodes","getFocusableNodes","nodesWhichAreNotCloseTargets","node","offsetParent","contains","focusedItemIndex","indexOf","shiftKey","preventDefault","id","console","warn","concat","triggerMap","validateTriggerPresence","init","options","triggerAttr","attributes","push","generateTriggerMap","show","close","closeModalById","window","require$$2"],"mappings":"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","file":"modal.js","sourcesContent":["/* Array.from */\nif (!Array.from) {\n  Array.from = (function () {\n    var toStr = Object.prototype.toString\n    var isCallable = function (fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]'\n    }\n    var toInteger = function (value) {\n      var number = Number(value)\n      if (isNaN(number)) {\n        return 0\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n    }\n    var maxSafeInteger = Math.pow(2, 53) - 1\n    var toLength = function (value) {\n      var len = toInteger(value)\n      return Math.min(Math.max(len, 0), maxSafeInteger)\n    }\n\n    return function from (arrayLike) {\n      var C = this\n      var items = Object(arrayLike)\n      if (arrayLike == null) {\n        throw new TypeError(\n          'Array.from requires an array-like object - not null or undefined'\n        )\n      }\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined\n      var T\n      if (typeof mapFn !== 'undefined') {\n        if (!isCallable(mapFn)) {\n          throw new TypeError(\n            'Array.from: when provided, the second argument must be a function'\n          )\n        }\n        if (arguments.length > 2) {\n          T = arguments[2]\n        }\n      }\n      var len = toLength(items.length)\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len)\n      var k = 0\n      var kValue\n      while (k < len) {\n        kValue = items[k]\n        if (mapFn) {\n          A[k] =\n                        typeof T === 'undefined'\n                          ? mapFn(kValue, k)\n                          : mapFn.call(T, kValue, k)\n        } else {\n          A[k] = kValue\n        }\n        k += 1\n      }\n      A.length = len\n      return A\n    }\n  })()\n}\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar MicroModal = function () {\n\n  var FOCUSABLE_ELEMENTS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^=\"-\"])'];\n\n  var Modal = /*#__PURE__*/function () {\n    function Modal(_ref) {\n      var targetModal = _ref.targetModal,\n          _ref$triggers = _ref.triggers,\n          triggers = _ref$triggers === void 0 ? [] : _ref$triggers,\n          _ref$onShow = _ref.onShow,\n          onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n          _ref$onClose = _ref.onClose,\n          onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n          _ref$openTrigger = _ref.openTrigger,\n          openTrigger = _ref$openTrigger === void 0 ? 'data-micromodal-trigger' : _ref$openTrigger,\n          _ref$closeTrigger = _ref.closeTrigger,\n          closeTrigger = _ref$closeTrigger === void 0 ? 'data-micromodal-close' : _ref$closeTrigger,\n          _ref$openClass = _ref.openClass,\n          openClass = _ref$openClass === void 0 ? 'is-open' : _ref$openClass,\n          _ref$disableScroll = _ref.disableScroll,\n          disableScroll = _ref$disableScroll === void 0 ? false : _ref$disableScroll,\n          _ref$disableFocus = _ref.disableFocus,\n          disableFocus = _ref$disableFocus === void 0 ? false : _ref$disableFocus,\n          _ref$awaitCloseAnimat = _ref.awaitCloseAnimation,\n          awaitCloseAnimation = _ref$awaitCloseAnimat === void 0 ? false : _ref$awaitCloseAnimat,\n          _ref$awaitOpenAnimati = _ref.awaitOpenAnimation,\n          awaitOpenAnimation = _ref$awaitOpenAnimati === void 0 ? false : _ref$awaitOpenAnimati,\n          _ref$debugMode = _ref.debugMode,\n          debugMode = _ref$debugMode === void 0 ? false : _ref$debugMode;\n\n      _classCallCheck(this, Modal);\n\n      // Save a reference of the modal\n      this.modal = document.getElementById(targetModal); // Save a reference to the passed config\n\n      this.config = {\n        debugMode: debugMode,\n        disableScroll: disableScroll,\n        openTrigger: openTrigger,\n        closeTrigger: closeTrigger,\n        openClass: openClass,\n        onShow: onShow,\n        onClose: onClose,\n        awaitCloseAnimation: awaitCloseAnimation,\n        awaitOpenAnimation: awaitOpenAnimation,\n        disableFocus: disableFocus\n      }; // Register click events only if pre binding eventListeners\n\n      if (triggers.length > 0) this.registerTriggers.apply(this, _toConsumableArray(triggers)); // pre bind functions for event listeners\n\n      this.onClick = this.onClick.bind(this);\n      this.onKeydown = this.onKeydown.bind(this);\n    }\n    /**\n     * Loops through all openTriggers and binds click event\n     * @param  {array} triggers [Array of node elements]\n     * @return {void}\n     */\n\n\n    _createClass(Modal, [{\n      key: \"registerTriggers\",\n      value: function registerTriggers() {\n        var _this = this;\n\n        for (var _len = arguments.length, triggers = new Array(_len), _key = 0; _key < _len; _key++) {\n          triggers[_key] = arguments[_key];\n        }\n\n        triggers.filter(Boolean).forEach(function (trigger) {\n          trigger.addEventListener('click', function (event) {\n            return _this.showModal(event);\n          });\n        });\n      }\n    }, {\n      key: \"showModal\",\n      value: function showModal() {\n        var _this2 = this;\n\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        this.activeElement = document.activeElement;\n        this.modal.setAttribute('aria-hidden', 'false');\n        this.modal.classList.add(this.config.openClass);\n        this.scrollBehaviour('disable');\n        this.addEventListeners();\n\n        if (this.config.awaitOpenAnimation) {\n          var handler = function handler() {\n            _this2.modal.removeEventListener('animationend', handler, false);\n\n            _this2.setFocusToFirstNode();\n          };\n\n          this.modal.addEventListener('animationend', handler, false);\n        } else {\n          this.setFocusToFirstNode();\n        }\n\n        this.config.onShow(this.modal, this.activeElement, event);\n      }\n    }, {\n      key: \"closeModal\",\n      value: function closeModal() {\n        var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var modal = this.modal;\n        this.modal.setAttribute('aria-hidden', 'true');\n        this.removeEventListeners();\n        this.scrollBehaviour('enable');\n\n        if (this.activeElement && this.activeElement.focus) {\n          this.activeElement.focus();\n        }\n\n        this.config.onClose(this.modal, this.activeElement, event);\n\n        if (this.config.awaitCloseAnimation) {\n          var openClass = this.config.openClass; // <- old school ftw\n\n          this.modal.addEventListener('animationend', function handler() {\n            modal.classList.remove(openClass);\n            modal.removeEventListener('animationend', handler, false);\n          }, false);\n        } else {\n          modal.classList.remove(this.config.openClass);\n        }\n      }\n    }, {\n      key: \"closeModalById\",\n      value: function closeModalById(targetModal) {\n        this.modal = document.getElementById(targetModal);\n        if (this.modal) this.closeModal();\n      }\n    }, {\n      key: \"scrollBehaviour\",\n      value: function scrollBehaviour(toggle) {\n        if (!this.config.disableScroll) return;\n        var body = document.querySelector('body');\n\n        switch (toggle) {\n          case 'enable':\n            Object.assign(body.style, {\n              overflow: ''\n            });\n            break;\n\n          case 'disable':\n            Object.assign(body.style, {\n              overflow: 'hidden'\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"addEventListeners\",\n      value: function addEventListeners() {\n        this.modal.addEventListener('touchstart', this.onClick);\n        this.modal.addEventListener('click', this.onClick);\n        document.addEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"removeEventListeners\",\n      value: function removeEventListeners() {\n        this.modal.removeEventListener('touchstart', this.onClick);\n        this.modal.removeEventListener('click', this.onClick);\n        document.removeEventListener('keydown', this.onKeydown);\n      }\n    }, {\n      key: \"onClick\",\n      value: function onClick(event) {\n        if (event.target.hasAttribute(this.config.closeTrigger)) {\n          this.closeModal(event);\n        }\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (event.keyCode === 27) this.closeModal(event); // esc\n\n        if (event.keyCode === 9) this.retainFocus(event); // tab\n      }\n    }, {\n      key: \"getFocusableNodes\",\n      value: function getFocusableNodes() {\n        var nodes = this.modal.querySelectorAll(FOCUSABLE_ELEMENTS);\n        return Array.apply(void 0, _toConsumableArray(nodes));\n      }\n      /**\n       * Tries to set focus on a node which is not a close trigger\n       * if no other nodes exist then focuses on first close trigger\n       */\n\n    }, {\n      key: \"setFocusToFirstNode\",\n      value: function setFocusToFirstNode() {\n        var _this3 = this;\n\n        if (this.config.disableFocus) return;\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return; // remove nodes on whose click, the modal closes\n        // could not think of a better name :(\n\n        var nodesWhichAreNotCloseTargets = focusableNodes.filter(function (node) {\n          return !node.hasAttribute(_this3.config.closeTrigger);\n        });\n        if (nodesWhichAreNotCloseTargets.length > 0) nodesWhichAreNotCloseTargets[0].focus();\n        if (nodesWhichAreNotCloseTargets.length === 0) focusableNodes[0].focus();\n      }\n    }, {\n      key: \"retainFocus\",\n      value: function retainFocus(event) {\n        var focusableNodes = this.getFocusableNodes(); // no focusable nodes\n\n        if (focusableNodes.length === 0) return;\n        /**\n         * Filters nodes which are hidden to prevent\n         * focus leak outside modal\n         */\n\n        focusableNodes = focusableNodes.filter(function (node) {\n          return node.offsetParent !== null;\n        }); // if disableFocus is true\n\n        if (!this.modal.contains(document.activeElement)) {\n          focusableNodes[0].focus();\n        } else {\n          var focusedItemIndex = focusableNodes.indexOf(document.activeElement);\n\n          if (event.shiftKey && focusedItemIndex === 0) {\n            focusableNodes[focusableNodes.length - 1].focus();\n            event.preventDefault();\n          }\n\n          if (!event.shiftKey && focusableNodes.length > 0 && focusedItemIndex === focusableNodes.length - 1) {\n            focusableNodes[0].focus();\n            event.preventDefault();\n          }\n        }\n      }\n    }]);\n\n    return Modal;\n  }();\n  /**\n   * Modal prototype ends.\n   * Here on code is responsible for detecting and\n   * auto binding event handlers on modal triggers\n   */\n  // Keep a reference to the opened modal\n\n\n  var activeModal = null;\n  /**\n   * Generates an associative array of modals and it's\n   * respective triggers\n   * @param  {array} triggers     An array of all triggers\n   * @param  {string} triggerAttr The data-attribute which triggers the module\n   * @return {array}\n   */\n\n  var generateTriggerMap = function generateTriggerMap(triggers, triggerAttr) {\n    var triggerMap = [];\n    triggers.forEach(function (trigger) {\n      var targetModal = trigger.attributes[triggerAttr].value;\n      if (triggerMap[targetModal] === undefined) triggerMap[targetModal] = [];\n      triggerMap[targetModal].push(trigger);\n    });\n    return triggerMap;\n  };\n  /**\n   * Validates whether a modal of the given id exists\n   * in the DOM\n   * @param  {number} id  The id of the modal\n   * @return {boolean}\n   */\n\n\n  var validateModalPresence = function validateModalPresence(id) {\n    if (!document.getElementById(id)) {\n      console.warn(\"MicroModal: \\u2757Seems like you have missed %c'\".concat(id, \"'\"), 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'ID somewhere in your code. Refer example below to resolve it.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<div class=\\\"modal\\\" id=\\\"\".concat(id, \"\\\"></div>\"));\n      return false;\n    }\n  };\n  /**\n   * Validates if there are modal triggers present\n   * in the DOM\n   * @param  {array} triggers An array of data-triggers\n   * @return {boolean}\n   */\n\n\n  var validateTriggerPresence = function validateTriggerPresence(triggers) {\n    if (triggers.length <= 0) {\n      console.warn(\"MicroModal: \\u2757Please specify at least one %c'micromodal-trigger'\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', 'data attribute.');\n      console.warn(\"%cExample:\", 'background-color: #f8f9fa;color: #50596c;font-weight: bold;', \"<a href=\\\"#\\\" data-micromodal-trigger=\\\"my-modal\\\"></a>\");\n      return false;\n    }\n  };\n  /**\n   * Checks if triggers and their corresponding modals\n   * are present in the DOM\n   * @param  {array} triggers   Array of DOM nodes which have data-triggers\n   * @param  {array} triggerMap Associative array of modals and their triggers\n   * @return {boolean}\n   */\n\n\n  var validateArgs = function validateArgs(triggers, triggerMap) {\n    validateTriggerPresence(triggers);\n    if (!triggerMap) return true;\n\n    for (var id in triggerMap) {\n      validateModalPresence(id);\n    }\n\n    return true;\n  };\n  /**\n   * Binds click handlers to all modal triggers\n   * @param  {object} config [description]\n   * @return void\n   */\n\n\n  var init = function init(config) {\n    // Create an config object with default openTrigger\n    var options = Object.assign({}, {\n      openTrigger: 'data-micromodal-trigger'\n    }, config); // Collects all the nodes with the trigger\n\n    var triggers = _toConsumableArray(document.querySelectorAll(\"[\".concat(options.openTrigger, \"]\"))); // Makes a mappings of modals with their trigger nodes\n\n\n    var triggerMap = generateTriggerMap(triggers, options.openTrigger); // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateArgs(triggers, triggerMap) === false) return; // For every target modal creates a new instance\n\n    for (var key in triggerMap) {\n      var value = triggerMap[key];\n      options.targetModal = key;\n      options.triggers = _toConsumableArray(value);\n      activeModal = new Modal(options); // eslint-disable-line no-new\n    }\n  };\n  /**\n   * Shows a particular modal\n   * @param  {string} targetModal [The id of the modal to display]\n   * @param  {object} config [The configuration object to pass]\n   * @return {void}\n   */\n\n\n  var show = function show(targetModal, config) {\n    var options = config || {};\n    options.targetModal = targetModal; // Checks if modals and triggers exist in dom\n\n    if (options.debugMode === true && validateModalPresence(targetModal) === false) return; // clear events in case previous modal wasn't close\n\n    if (activeModal) activeModal.removeEventListeners(); // stores reference to active modal\n\n    activeModal = new Modal(options); // eslint-disable-line no-new\n\n    activeModal.showModal();\n  };\n  /**\n   * Closes the active modal\n   * @param  {string} targetModal [The id of the modal to close]\n   * @return {void}\n   */\n\n\n  var close = function close(targetModal) {\n    targetModal ? activeModal.closeModalById(targetModal) : activeModal.closeModal();\n  };\n\n  return {\n    init: init,\n    show: show,\n    close: close\n  };\n}();\nwindow.MicroModal = MicroModal;\n\nexport default MicroModal;\n","/* Object.assign */\nif (typeof Object.assign !== 'function') {\n  Object.defineProperty(Object, 'assign', {\n    value: function assign (target, varArgs) {\n      'use strict'\n      if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n      var to = Object(target)\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n        if (nextSource != null) {\n          for (var nextKey in nextSource) {\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n","require('../../polyfills/Object.assign')\nrequire('../../polyfills/Array.from')\nwindow.MicroModal = require('micromodal')\n"]}